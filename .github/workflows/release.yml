name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: '1.0.0'

env:
  PYTHON_VERSION: "3.11"
  HF_TOKEN: ${{ secrets.HF_TOKEN }}

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build package
      run: |
        python -m pip install build
        python -m build
        
    - name: Upload to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        
    - name: Upload to Hugging Face Hub
      run: |
        echo "Uploading model to Hugging Face Hub..."
        # Add your model upload logic here
        # Example: huggingface-cli upload your-username/your-model models/
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.version || github.event.release.tag_name }}
        release_name: Release v${{ github.event.inputs.version || github.event.release.tag_name }}
        body: |
          ## What's Changed
          
          - Model training improvements
          - Bug fixes and optimizations
          - New features and enhancements
          
          ## Installation
          
          ```bash
          pip install your-package-name==${{ github.event.inputs.version || github.event.release.tag_name }}
          ```
          
          ## Usage
          
          ```python
          from your_package import YourModel
          
          model = YourModel.from_pretrained("your-username/your-model")
          ```
        draft: false
        prerelease: false 